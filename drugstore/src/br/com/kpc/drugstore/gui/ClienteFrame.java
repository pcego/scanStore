/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.kpc.drugstore.gui;

import br.com.kpc.drugstore.core.Client;
import br.com.kpc.drugstore.core.Company;
import br.com.kpc.drugstore.core.IRepositoryClient;
import br.com.kpc.drugstore.core.IRepositoryCompany;
import br.com.kpc.drugstore.dao.DaoClient;
import br.com.kpc.drugstore.dao.DaoCompany;
import br.com.kpc.drugstore.scan.Scan;
import br.com.kpc.drugstore.service.Service;
import br.com.kpc.drugstore.util.Config;
import br.com.kpc.drugstore.util.FormatDate;
import br.com.kpc.drugstore.util.Mask;
import br.com.kpc.drugstore.util.SystemMessage;
import groovy.swing.SwingBuilder;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author www
 */
public class ClienteFrame extends javax.swing.JFrame {

    /**
     * Creates new form ClienteFrame
     */
    public ClienteFrame() {
        initComponents();
        btTypeDefault();
        definindoMask();
        Config.considerarEnterComoTab(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btAdicionar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btConfirmar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        tvID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tvName = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tvRG = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        cbEstCivil = new javax.swing.JComboBox();
        rbAtivo = new javax.swing.JRadioButton();
        jLabel29 = new javax.swing.JLabel();
        tvEmail = new javax.swing.JTextField();
        btCPFScan = new javax.swing.JButton();
        btRGScan = new javax.swing.JButton();
        tvBirthDay = new javax.swing.JFormattedTextField();
        tvCPF = new javax.swing.JFormattedTextField();
        tvPhone = new javax.swing.JFormattedTextField();
        tvCellPhone1 = new javax.swing.JFormattedTextField();
        tvCellPhone2 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        tvAdressStreet = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        tvAdressNeighborhood = new javax.swing.JTextField();
        tvAdressCity = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cbAdressStat = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        tvAdressComplement = new javax.swing.JTextField();
        tvAdressNumber = new javax.swing.JTextField();
        tvAdressPostalCode = new javax.swing.JFormattedTextField();
        btPesquisar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cliente - KPC Software Delopmet");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        btAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/CadClientes.png"))); // NOI18N
        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/RemoverClientes2.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/AlterarClientes.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/cancelar.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/salvar.png"))); // NOI18N
        btConfirmar.setText("Confirmar");
        btConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel11.setText("Código:");

        tvID.setDoubleBuffered(true);
        tvID.setDragEnabled(true);
        tvID.setEnabled(false);
        tvID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tvIDKeyPressed(evt);
            }
        });

        jLabel12.setText("*Nome:");

        tvName.setNextFocusableComponent(tvCPF);
        tvName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tvNameFocusLost(evt);
            }
        });

        jLabel13.setText("Telefone:");

        jLabel14.setText("*Celular");

        jLabel15.setText("Celular Opc.");

        jLabel16.setText("Sexo:");

        jLabel17.setText("*CPF:");

        jLabel18.setText("RG");

        jLabel20.setText("* Nascimento:");

        cbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MASCULINO", "FEMININO" }));

        jLabel21.setText("Est. Civil:");

        cbEstCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SOLTEIRO(A)", "CASADO(A)", "DIVORCIADO(A)", "VIÚDO(A)" }));

        rbAtivo.setSelected(true);
        rbAtivo.setText("Ativo");

        jLabel29.setText("Email:");

        tvEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tvEmailFocusLost(evt);
            }
        });

        btCPFScan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/scanner.png"))); // NOI18N
        btCPFScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCPFScanActionPerformed(evt);
            }
        });

        btRGScan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/scanner.png"))); // NOI18N
        btRGScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRGScanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(14, 14, 14)
                        .addComponent(tvEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(27, 27, 27)
                                .addComponent(tvRG))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(4, 4, 4)
                                        .addComponent(tvID, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tvCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btRGScan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCPFScan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel16))
                                .addGap(20, 20, 20)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(tvName, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tvBirthDay))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rbAtivo))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(tvPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tvCellPhone1)
                                    .addComponent(tvCellPhone2)))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tvName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tvID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(2, 2, 2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(tvCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tvRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rbAtivo)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tvBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(btCPFScan, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btRGScan, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tvPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tvCellPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tvCellPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Endereço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel22.setText("*Cep:");

        jLabel23.setText("*Endereço:");

        tvAdressStreet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tvAdressStreetFocusLost(evt);
            }
        });

        jLabel24.setText("*Bairro:");

        tvAdressNeighborhood.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tvAdressNeighborhoodFocusLost(evt);
            }
        });

        tvAdressCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tvAdressCityFocusLost(evt);
            }
        });

        jLabel25.setText("*Nº");

        jLabel26.setText("Compl:");

        cbAdressStat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "GO", "ES", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SP", "SC", "SE", "TO" }));
        cbAdressStat.setSelectedIndex(12);

        jLabel27.setText("*Estado:");

        jLabel28.setText("*Cidade:");

        tvAdressComplement.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tvAdressComplementFocusLost(evt);
            }
        });

        tvAdressNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tvAdressNumberFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(28, 28, 28)
                        .addComponent(tvAdressNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tvAdressCity))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tvAdressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tvAdressNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                            .addComponent(tvAdressPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbAdressStat, 0, 72, Short.MAX_VALUE)
                    .addComponent(tvAdressComplement))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvAdressPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvAdressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tvAdressNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tvAdressComplement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tvAdressNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tvAdressCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbAdressStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/ConsultaClientes.png"))); // NOI18N
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/kpc/drugstore/img/logoKPCMini2.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btAdicionar)
                            .addGap(1, 1, 1)
                            .addComponent(btAlterar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btConfirmar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addComponent(btExcluir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btAlterar)
                        .addComponent(btAdicionar)
                        .addComponent(btExcluir))
                    .addComponent(btPesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
     Declarando cliente Global
     */
    private IRepositoryClient iRepositoryClient = (IRepositoryClient) new DaoClient();
    private static String opMenu = null; // I insert, D Delete U update
    //Linha da tabela selecionada
    private int linhaSelecionada = 0;
    private static Client clientVG = new Client();
    private static String Cpf_imageVG = null;
    private static String Rg_imageVG = null;
    //Pegado o caminho do arquivo com o nome da pasta 

    private void definindoMask() {

        try {
            Mask.maskDate(tvBirthDay);
            Mask.maskCPF(tvCPF);
            Mask.maskFone(tvPhone);
            Mask.maskFone(tvCellPhone1);
            Mask.maskFone(tvCellPhone2);
            Mask.maskCep(tvAdressPostalCode);

        } catch (ParseException ex) {
            Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        opMenu = "I";
        btTypeInsert();
        limparCampos();
        habilitarCampos(true);
        tvName.requestFocus();
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        opMenu = "D";

        if (tvID.getText().trim().equals("")) {
            ConsultarCliente.getJanelaConsultarCliente("CADCLIENTE_D").setVisible(true);
            return;
        }

        btTypeDelete();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        opMenu = "U";

        if (tvID.getText().trim().equals("")) {
            ConsultarCliente.getJanelaConsultarCliente("CADCLIENTE_A").setVisible(true);
            return;
        }

        btTypeUpdate();
        habilitarCampos(true);

    }//GEN-LAST:event_btAlterarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        btTypeDefault();
        limparCampos();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmarActionPerformed
        //Se Retorno de validação falhar ele sai da função
        if (!validacaoCliente()) {
            return;
        }
        boolean retorno;
        switch (opMenu) {
            case "U":
                retorno = update();
                if (retorno) {
                    SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Atualizado");
                    btTypeDefault();

                }
                break;
            case "I":
                retorno = insert();
                if (retorno) {
                    SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Gravado");
                    btTypeDefault();
                    limparCampos();
                }
                break;
            case "D":
                String[] opcoes = {"Sim", "Nao"};
                int opcao = JOptionPane.showOptionDialog(this, "Deseja excluir cliente?",
                        "Confirmar Exclusão", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[1]);
                //Verificando a Resposta do usuario, se resposta = NÂO, sai da função.
                if (opcao == 1) {
                    return;
                }

                retorno = delete();
                if (retorno) {
                    JOptionPane.showMessageDialog(this, "Excluido");
                    btTypeDefault();
                    limparCampos();
                }
                break;
        }
        opMenu = null;
        btTypeDefault();
    }//GEN-LAST:event_btConfirmarActionPerformed

    private void tvIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tvIDKeyPressed
        if (evt.getKeyCode() == 10) { //ENTER
            evt.setKeyCode(KeyEvent.VK_TAB);
        }
    }//GEN-LAST:event_tvIDKeyPressed

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        limparCampos();
        ConsultarCliente.getJanelaConsultarCliente("CADCLIENTE").setVisible(true);

    }//GEN-LAST:event_btPesquisarActionPerformed

    private void tvNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tvNameFocusLost
        tvName.setText(tvName.getText().toUpperCase());
    }//GEN-LAST:event_tvNameFocusLost

    private void tvAdressStreetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tvAdressStreetFocusLost
        tvAdressStreet.setText(tvAdressStreet.getText().toUpperCase());
    }//GEN-LAST:event_tvAdressStreetFocusLost

    private void tvAdressComplementFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tvAdressComplementFocusLost
        tvAdressComplement.setText(tvAdressComplement.getText().toUpperCase());
    }//GEN-LAST:event_tvAdressComplementFocusLost

    private void tvAdressNeighborhoodFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tvAdressNeighborhoodFocusLost
        tvAdressNeighborhood.setText(tvAdressNeighborhood.getText().toUpperCase());
    }//GEN-LAST:event_tvAdressNeighborhoodFocusLost

    private void tvAdressCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tvAdressCityFocusLost
        tvAdressCity.setText(tvAdressCity.getText().toUpperCase());
    }//GEN-LAST:event_tvAdressCityFocusLost

    private void tvEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tvEmailFocusLost
        tvEmail.setText(tvEmail.getText().toLowerCase());
    }//GEN-LAST:event_tvEmailFocusLost

    private void btCPFScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCPFScanActionPerformed
        try {
            boolean retorno = false;
            Scan sc = new Scan();
            File[] img = sc.getGuiScan(Config.DIRETORIOIMAGEM + Mask.limparMaskCPF(tvCPF.getText()));

            retorno = Scan.renameImg(img[0], Config.DIRETORIOIMAGEM + Mask.limparMaskCPF(tvCPF.getText()), "cpf.jpg");
            //carregarImg(displayReceita, img[0]);

            if (retorno) {
                Cpf_imageVG = (Config.DIRETORIOIMAGEM + Mask.limparMaskCPF(tvCPF.getText().trim()) + "\\cpf.jpg");
            } else {
                SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "falha ao renomear imagem.");
            }
        } catch (Exception e) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Nenhum equipamento de scanner configurado.");
        }

    }//GEN-LAST:event_btCPFScanActionPerformed

    private void btRGScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRGScanActionPerformed
        try {
            boolean retorno = false;
            Scan sc = new Scan();
            File[] img = sc.getGuiScan(Config.DIRETORIOIMAGEM + Mask.limparMaskCPF(tvCPF.getText()));

            retorno = Scan.renameImg(img[0], Config.DIRETORIOIMAGEM + Mask.limparMaskCPF(tvCPF.getText()), "rg.jpg");
            //carregarImg(displayReceita, img[0]);

            if (retorno) {
                Rg_imageVG = (Config.DIRETORIOIMAGEM + Mask.limparMaskCPF(tvCPF.getText().trim()) + "\\rg.jpg");
            } else {
                SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "falha ao renomear imagem.");
            }
        } catch (Exception e) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Nenhum equipamento de scanner configurado.");
        }

    }//GEN-LAST:event_btRGScanActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        limparCampos();
        btTypeDefault();
    }//GEN-LAST:event_formWindowClosed

    private void tvAdressNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tvAdressNumberFocusLost
        Mask.validaSomenteNumero(tvAdressNumber);
    }//GEN-LAST:event_tvAdressNumberFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteFrame().setVisible(true);
            }
        });
    }

    private boolean validacaoCliente() {
        if ((Mask.limparMaskCPF(tvCPF.getText()).trim().equals("")) || (tvCPF.getText().trim().length() < 14)) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Informe seu CPF!");
            tvCPF.requestFocus();
            return false;
        }
        if (!Mask.validaCpfCnpj(tvCPF.getText())) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "CPF digitado é inválido");
            tvCPF.requestFocus();
            return false;
        }
        if ((tvName.getText().trim().equals("")) || (tvName.getText().trim().length() < 10)) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Por favor, insira o seu nome completo!");
            tvName.requestFocus();
            return false;
        }
        if ((Cpf_imageVG == null) || (Cpf_imageVG.trim().equals(""))   ) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Por favor, escanear CPF!");
            btCPFScan.requestFocus();
            return false;
        }
        if ((Mask.limparMasTelefone(tvCellPhone1.getText()).trim().equals("")) || (Mask.limparMasTelefone(tvCellPhone1.getText()).trim().length() < 10)) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Por favor, insira um número de celular válido!");
            tvCellPhone1.requestFocus();
            return false;
        }

        if ((Mask.limparMaskData(tvBirthDay.getText()).trim().equals("")) || (Mask.limparMaskData(tvBirthDay.getText()).trim().length() < 8)) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Por favor, insira data de Nascimento válida!");
            tvBirthDay.requestFocus();
            return false;
        }
        if ((Mask.limparMaskCEP(tvAdressPostalCode.getText()).trim().equals("")) || (Mask.limparMaskCEP(tvAdressPostalCode.getText()).trim().length() < 8)) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Por favor, insira númeto do CEP válida!");
            tvAdressPostalCode.requestFocus();
            return false;
        }
        if (tvAdressNeighborhood.getText().trim().equals("")) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Por favor, insira o nome do bairro válido!");
            tvAdressNeighborhood.requestFocus();
            return false;
        }
        if (tvAdressCity.getText().trim().equals("")) {
            SystemMessage.kpcShowMessage(null, SystemMessage.INFORMATION, "Por favor, insira o nome do bairro válido!");
            tvAdressCity.requestFocus();
            return false;
        }

        if (tvAdressNumber.getText().trim().length() == 0) {
            String[] opcoes = {"Sim", "Nao"};
            int opcao = JOptionPane.showOptionDialog(this, "ATENÇÃO: Não foi informado numero do endereço, deseja continuar assim mesmo?",
                    "Validação do cadastro de endereço.", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[1]);
            //Verificando a Resposta do usuario, se resposta = NÂO, sai da função.
            if (opcao == 1) {
                tvAdressNumber.requestFocus();
                return false;
            }
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btAdicionar;
    private static javax.swing.JButton btAlterar;
    private static javax.swing.JButton btCPFScan;
    private static javax.swing.JButton btCancelar;
    private static javax.swing.JButton btConfirmar;
    private static javax.swing.JButton btExcluir;
    private static javax.swing.JButton btPesquisar;
    private static javax.swing.JButton btRGScan;
    private static javax.swing.JComboBox cbAdressStat;
    private static javax.swing.JComboBox cbEstCivil;
    private static javax.swing.JComboBox cbSexo;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private static javax.swing.JRadioButton rbAtivo;
    private static javax.swing.JTextField tvAdressCity;
    private static javax.swing.JTextField tvAdressComplement;
    private static javax.swing.JTextField tvAdressNeighborhood;
    private static javax.swing.JTextField tvAdressNumber;
    private static javax.swing.JFormattedTextField tvAdressPostalCode;
    private static javax.swing.JTextField tvAdressStreet;
    private static javax.swing.JFormattedTextField tvBirthDay;
    private static javax.swing.JFormattedTextField tvCPF;
    private static javax.swing.JFormattedTextField tvCellPhone1;
    private static javax.swing.JFormattedTextField tvCellPhone2;
    private static javax.swing.JTextField tvEmail;
    protected static javax.swing.JTextField tvID;
    private static javax.swing.JTextField tvName;
    private static javax.swing.JFormattedTextField tvPhone;
    private static javax.swing.JTextField tvRG;
    // End of variables declaration//GEN-END:variables
  private boolean insert() {
        try {

            clientVG = new Client();

            clientVG.setName(tvName.getText().trim());
            clientVG.setSex(cbSexo.getSelectedItem().toString());
            clientVG.setMarital_status(cbEstCivil.getSelectedItem().toString());
            Date BirthDay = null;
            try {
                BirthDay = new SimpleDateFormat("dd/MM/yyyy").parse(tvBirthDay.getText());
            } catch (Exception ex) {
                Logger.getLogger(ClienteFrame.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
            clientVG.setDt_nasc(BirthDay);

            clientVG.setCpf_image(Cpf_imageVG);
            clientVG.setRg_image(Rg_imageVG);
            clientVG.setCpf(Mask.limparMaskCPF(tvCPF.getText()));
            clientVG.setRg(tvRG.getText());
            clientVG.setPhone(Mask.limparMasTelefone(tvPhone.getText()));
            clientVG.setCellPhone_1(Mask.limparMasTelefone(tvCellPhone1.getText()));
            clientVG.setCellPhone_2(Mask.limparMasTelefone(tvCellPhone2.getText()));
            clientVG.setAdress_postalCode(tvAdressPostalCode.getText());
            clientVG.setAdress_street(tvAdressStreet.getText());
            clientVG.setAdress_number(Integer.valueOf(tvAdressNumber.getText().trim()));
            clientVG.setAdress_complement(tvAdressComplement.getText());
            clientVG.setAdress_city(tvAdressCity.getText());
            clientVG.setAdress_neighborhood(tvAdressNeighborhood.getText());
            clientVG.setEnd_stat(cbAdressStat.getSelectedItem().toString());
            clientVG.setEmail(tvEmail.getText());

            clientVG.setDt_cad(new Date());
            clientVG.setActive(true);

            clientVG.setCompany(Service.getIRepositoryCompany().getCompany());

            iRepositoryClient.salvar(clientVG);
            return true;
        } catch (Exception e) {
            SystemMessage.kpcShowMessage(e, SystemMessage.ERROR, "Ocorreu um erro ");
            return false;
        }
    }

    private boolean update() {
        try {
            clientVG.setId(Long.valueOf(tvID.getText()));
            clientVG.setName(tvName.getText().trim());
            clientVG.setSex(cbSexo.getSelectedItem().toString());
            clientVG.setMarital_status(cbEstCivil.getSelectedItem().toString());

            Date BirthDay = null;
            try {
                BirthDay = new SimpleDateFormat("dd/MM/yyyy").parse(tvBirthDay.getText());
            } catch (Exception ex) {
                Logger.getLogger(ClienteFrame.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

            clientVG.setDt_nasc(BirthDay);
            clientVG.setCpf_image(Cpf_imageVG);
            clientVG.setRg_image(Rg_imageVG);
            clientVG.setCpf(Mask.limparMaskCPF(tvCPF.getText()));
            clientVG.setRg(tvRG.getText());
            clientVG.setPhone(Mask.limparMasTelefone(tvPhone.getText()));
            clientVG.setCellPhone_1(Mask.limparMasTelefone(tvCellPhone1.getText()));
            clientVG.setCellPhone_2(Mask.limparMasTelefone(tvCellPhone2.getText()));
            clientVG.setAdress_postalCode(tvAdressPostalCode.getText());
            clientVG.setAdress_street(tvAdressStreet.getText());
            clientVG.setAdress_number(Integer.valueOf(tvAdressNumber.getText().trim()));
            clientVG.setAdress_complement(tvAdressComplement.getText());
            clientVG.setAdress_city(tvAdressCity.getText());
            clientVG.setAdress_neighborhood(tvAdressNeighborhood.getText());
            clientVG.setEnd_stat(cbAdressStat.getSelectedItem().toString());
            clientVG.setEmail(tvEmail.getText());

            clientVG.setActive(rbAtivo.isSelected());

            clientVG.setCompany(Service.getIRepositoryCompany().getCompany());

            iRepositoryClient.atualizar(clientVG);

            Service.getIRepositoryClient().atualizar(clientVG);
            return true;
        } catch (Exception e) {
            SystemMessage.kpcShowMessage(e, SystemMessage.ERROR, "Ocorreu um erro ao atualizar o cliente! ");
            return false;

        }
    }

    private boolean delete() {
        try {
            clientVG = Service.getIRepositoryClient().getClientByCpf(clientVG.getCpf().trim(), true);
            Service.getIRepositoryClient().apagar(clientVG);
            return true;

        } catch (NumberFormatException e) {
            SystemMessage.kpcShowMessage(e, SystemMessage.ERROR, "Ocorreu um erro ao excluir o cliente! ");
            return false;

        }
    }

    private void limparCampos() {

        tvID.setText(null);
        tvName.setText(null);
        cbSexo.setSelectedIndex(0);
        cbEstCivil.setSelectedIndex(0);
        tvBirthDay.setText(null);
        tvCPF.setText("");
        tvRG.setText(null);
        tvPhone.setText(null);
        tvCellPhone1.setText("");
        tvCellPhone2.setText(null);
        tvAdressPostalCode.setText(null);
        tvAdressStreet.setText(null);
        tvAdressNumber.setText(null);
        tvAdressComplement.setText(null);
        tvAdressCity.setText(null);
        tvAdressNeighborhood.setText(null);
        cbAdressStat.setSelectedIndex(12);
        tvEmail.setText(null);
        rbAtivo.setSelected(true);
        Cpf_imageVG = "";
        Rg_imageVG = "";

    }

    private void btTypeInsert() {
        btAdicionar.setEnabled(false);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btConfirmar.setEnabled(true);
        btCancelar.setEnabled(true);
        btPesquisar.setEnabled(false);
        btCPFScan.setEnabled(true);
        btRGScan.setEnabled(true);

    }

    private static void btTypeDelete() {
        btAdicionar.setEnabled(false);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btConfirmar.setEnabled(true);
        btCancelar.setEnabled(true);
        btPesquisar.setEnabled(false);

    }

    private static void btTypeUpdate() {
        btAdicionar.setEnabled(false);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btConfirmar.setEnabled(true);
        btCancelar.setEnabled(true);
        btPesquisar.setEnabled(false);
        btCPFScan.setEnabled(true);
        btRGScan.setEnabled(true);

    }

    private void btTypeDefault() {
        habilitarCampos(false);
        btAdicionar.setEnabled(true);
        btAlterar.setEnabled(true);
        btConfirmar.setEnabled(false);
        btCancelar.setEnabled(false);
        btPesquisar.setEnabled(true);
        btCPFScan.setEnabled(false);
        btRGScan.setEnabled(false);
        btExcluir.setEnabled(true);

    }

    private static void habilitarCampos(boolean acao) {
        tvName.setEnabled(acao);
        tvCPF.setEnabled(acao);
        tvRG.setEnabled(acao);
        cbSexo.setEnabled(acao);
        cbEstCivil.setEnabled(acao);
        tvBirthDay.setEnabled(acao);
        rbAtivo.setEnabled(acao);
        tvPhone.setEnabled(acao);
        tvCellPhone1.setEnabled(acao);
        tvCellPhone2.setEnabled(acao);
        tvAdressPostalCode.setEnabled(acao);
        tvAdressStreet.setEnabled(acao);
        tvAdressNumber.setEnabled(acao);
        tvAdressComplement.setEnabled(acao);
        tvAdressNeighborhood.setEnabled(acao);
        tvAdressCity.setEnabled(acao);
        cbAdressStat.setEnabled(acao);
        tvEmail.setEnabled(acao);
    }

    /**
     *
     * @param cli
     * @param acao Ação que esta buscando o cliente, E = Excluir, P = Pesquisa,
     * A = Alterar
     */
    protected static void getCliente(Client cli, String acao) {

        clientVG = cli;
        tvID.setText(String.valueOf(clientVG.getId()));
        tvName.setText(clientVG.getName());
        cbSexo.setSelectedItem(clientVG.getSex());
        cbEstCivil.setSelectedItem(clientVG.getMarital_status());

        tvBirthDay.setText(FormatDate.dateCovertToShow(clientVG.getDt_nasc()));

        Cpf_imageVG = clientVG.getCpf_image();
        Rg_imageVG = clientVG.getRg_image();
        
        tvCPF.setText(clientVG.getCpf());
        tvRG.setText(clientVG.getRg());
        tvPhone.setText(clientVG.getPhone());
        tvCellPhone1.setText(clientVG.getCellPhone_1());
        tvCellPhone2.setText(clientVG.getCellPhone_2());
        tvAdressPostalCode.setText(clientVG.getAdress_postalCode());
        tvAdressStreet.setText(clientVG.getAdress_street());
        tvAdressNumber.setText(String.valueOf(clientVG.getAdress_number()));
        tvAdressComplement.setText(clientVG.getAdress_complement());
        tvAdressCity.setText(clientVG.getAdress_city());
        tvAdressNeighborhood.setText(clientVG.getAdress_neighborhood());
        cbAdressStat.setSelectedItem(clientVG.getEnd_stat());
        tvEmail.setText(clientVG.getEmail());
        rbAtivo.setSelected(clientVG.isActive());

        switch (acao) {
            case "D":
                opMenu = "D";
                btTypeDelete();
                break;
            case "A":
                opMenu = "U";
                btTypeUpdate();
                habilitarCampos(true);
                break;
        }
    }

}
